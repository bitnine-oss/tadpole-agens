<!DOCTYPE html>
<html>
<head>
  <script src="d3.v3.min.js"></script>
  <script src="jquery-1.9.1.min.js"></script>
  <script src="jquery.mobile-1.4.2.min.js"></script>
  <script src="nv.d3.js"></script>
  <link rel="stylesheet" type="text/css" href="jquery.mobile-1.4.2.min.css">
  <link rel="stylesheet" type="text/css" href="nv.d3.css">

  <style type="text/css">
    #chartCanvas {
      background: #fefefe;
      height: 300px;
      width: 100%;
      border: 1px solid #777;
      border-radius: 8px;
      box-shadow: 2px 2px 5px #888888;
    }
  </style>
</head>

  <script type="text/javascript">
    nv.addGraph(function() {
      var chart = nv.models.lineChart()
        .margin({
          left: 100,
          right: 50
        }) //Adjust chart margins to give the x-axis some breathing room.
        .useInteractiveGuideline(true) //We want nice looking tooltips and a guideline!
        .transitionDuration(350) //how fast do you want the lines to transition?
        .showLegend(true) //Show the legend, allowing users to turn on/off line series.
        .showYAxis(true) //Show the y-axis
        .showXAxis(true) //Show the x-axis
      ;
      
      var reportData = [{
        "key": "ActualElapsedTime",
        "color": "#d62728",
        "values": [{
          "x": new Date("2016-03-21T00:00:00"),
          "y": 100.00
        }, {
          "x": new Date("2016-03-22T00:00:00"),
          "y": 99.00 }]
      }];

      chart.xAxis //Chart x-axis settings
        .axisLabel('Time')
        .tickValues(reportData[0].values.map(function(p) { return p.x}))
        .tickFormat(function(d) {
          return d3.time.format('%x')(new Date(d))
        });

       chart.yAxis //Chart y-axis settings
        .axisLabel('Consistancy')
        .tickFormat(d3.format('.02f'));

      /* Done setting the chart up? Time to render it!*/
      d3.select('#chart svg') //Select the <svg> element you want to render the chart in.   
        .datum(reportData) //Populate the <svg> element with chart data...
        .call(chart); //Finally, render the chart!

      //Update the chart when window resizes.
      nv.utils.windowResize(function() {
        chart.update()
      });
      return chart;
    });
  </script>

  <body>
    <div data-role="page" id="page1">
      <div role="main" class="ui-content">
        <div id="chart">
          <svg id="chartCanvas"></svg>
        </div>
      </div>
    </div>

  </body>
</html>